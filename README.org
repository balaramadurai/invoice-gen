#+TITLE: Finding Your (In)voice
#+AUTHOR: Bala Ramadurai
Youtube Video of the emacs conference 2021 talk - https://youtu.be/P3EMosDPobs
* Ingredients for Invoicing

1. Org-mode
2. python environment setup in your org-mode config
3. some libraries for python
   - =pip install pandas=
   - =pip install tabulate=
   - =pip install num2words=
4. yasnippet package
5. [[https://miktex.org/download][MikTeX]] packages
* Demo
** Instructions     :noexport:
*** Step 0: If you don't have your basic financial info setup, use the file bankinfo.org and customize that file
*** Step 0.5: If you don't have the client setup done, use the snippet inv-setup
**** Create a file =<Client-name>.org= in the =setup= folder
*** Step 1: Use snippet inv-item to enter your rate table (Need to be done once per file)
*** Step 2: Go to the headline Clock Table for Reference
*** Step 3: =C-c C-c= on the clocktable to generate the clocktable for the client
*** Step 4: Go to the headline Items
*** Step 5: Run the first python source block using =C-c C-c=
*** Step 6: Run the second python source block using =C-c C-c=
*** Step 7: Run dispatcher =,eeC-slp= on the 'TODO Raise Invoice' headline
#+NAME: Item-Master-ACMEClient1
| Item                               |    HSN | Rate | GST Rate |
|------------------------------------+--------+------+----------|
| Teaching 2021 ACMEClient1 MBA 1 DT | 998393 |  100 |       18 |
** TODO Raise Invoice
:PROPERTIES:
:EXPORT_TITLE: Tax Invoice
:EXPORT_OPTIONS: title:nil author:nil date:nil
:EXPORT_FILE_NAME: Invoices/06-11-2021-BR-Invoice-ACMEClient1.pdf
:END:


#+INCLUDE: setup/ACMEClient1.org::#fininfo
#+INCLUDE: setup/bankinfo.org::#setup
#+INCLUDE: setup/bankinfo.org::#tax
-----
#+ATTR_LATEX: :align a{4.5cm}
| *Invoice No.*  06-11-2021-ACMEClient1 |

# Customize the date format and Invoice numbering as per your preference and local rules

#+ATTR_LATEX: :environment tabular :align p{1cm}p{2.75cm}p{2.1cm}p{1.7cm}p{0.75cm}p{1.65cm}
| *GSTIN*    | {{{MyGST}}} | *Invoice Date* | 06-11-2021 | *State* | {{{MyGST_State}}} |

#+INCLUDE: setup/ACMEClient1.org::#invoiceto
-----
#+ATTR_LATEX: :align a{4.5cm}
| *Due Date*: 06-12-2021 |
*** Clock Table for Reference                                                                              :noexport:
#+BEGIN: clocktable :scope file :match "+Billable+ACMEClient1" :maxlevel 3 :block lastmonth :compact t :emphasize nil :header "#+NAME: clocktable-lastmonth-06-11-2021\n" :formula "$3=$2;t"
#+NAME: clocktable-lastmonth-06-11-2021
| Headline                           | Time |      |
|------------------------------------+------+------|
| *Total time*                         | *1:00* | 1.00 |
|------------------------------------+------+------|
| Teaching 2021 ACMEClient1 MBA 1 DT | 1:00 | 1.00 |
#+TBLFM: $3=$2;t
#+END

*** Items

#+begin_SRC python :results output raw :var clockdata=clocktable-lastmonth-06-11-2021 items=Item-Master-ACMEClient1 :exports results
import os, sys, itertools, pandas as pd
from tabulate import tabulate

CurrencySymbol = 'INR'; 

timesheetdf = pd.DataFrame(columns=['Item', 'Quantity', 'HSN', 'Rate', 'GSTRate', 'Taxable', 'Total GST', 'Total'])
itemsdf = pd.DataFrame(items, columns=['Item', 'HSN', 'Rate', 'GSTRate'])
clockdata_lines = clockdata[2:] # Change this index according to the depth of the headline

for row in clockdata_lines:
    name = row[0].replace('\_','').strip()
    item, quantity, hsn, rate, gstrate, taxable, gst, total = '', 0, '',0,0,0,0,0
    subitem = name
    if row[2] != '':
        quantity = float(row[2])
        item = name
        subitem = ''
        loc = itemsdf[itemsdf.Item == name]
        if len(loc) > 0:
            hsn = int(loc.HSN)
            rate = float(loc.Rate)
            gstrate = float(loc.GSTRate)
        taxable = round(quantity * rate, 2)
        gst = round(gstrate * taxable/100, 2)
        total = round(taxable + gst, 2)
    timesheetdf.loc[len(timesheetdf)] = [item, quantity, hsn, rate, gstrate, taxable, gst, total]

totaltaxable = pd.to_numeric(timesheetdf.Taxable, errors='coerce').sum()
totalgst = pd.to_numeric(timesheetdf['Total GST'], errors='coerce').sum()
amountdue = pd.to_numeric(timesheetdf.Total, errors='coerce').sum()
print("#+ATTR_LATEX: :environment tabular :align a{4.25cm}p{1.25cm}a{1.5cm}p{1cm}a{1.25cm}p{1.25cm}a{1.15cm}p{1.35cm}")
print('#+NAME: tab-items-06-11-2021')
header_list = [' *Item*', '*Quantity*', '*HSN/SAC*', '*Rate(' + CurrencySymbol + ')*', '*GST(%)*', '*Taxable Value(' + CurrencySymbol + ')*', '*' + '*GST*' + ' (' + CurrencySymbol + ')*', '*Total(' + CurrencySymbol + ')* ']
footer_list = [' *Total* ', ' ', ' ', ' ', ' ', totaltaxable, totalgst, amountdue]
timesheetdf.loc[len(timesheetdf)] = footer_list
print(tabulate(timesheetdf, header_list, tablefmt="orgtbl", floatfmt=".2f",showindex=False))
#+end_SRC

#+RESULTS:
#+ATTR_LATEX: :environment tabular :align a{4.25cm}p{1.25cm}a{1.5cm}p{1cm}a{1.25cm}p{1.25cm}a{1.15cm}p{1.35cm}
#+NAME: tab-items-06-11-2021
| *Item*                               | *Quantity* | *HSN/SAC* | *Rate(INR)* | *GST(%)* | *Taxable Value(INR)* | **GST* (INR)* | *Total(INR)* |
|------------------------------------+----------+---------+-----------+--------+--------------------+-------------+------------|
| Teaching 2021 ACMEClient1 MBA 1 DT |      1.0 |  998393 |     100.0 |   18.0 |             100.00 |       18.00 |     118.00 |
| *Total*                              |          |         |           |        |             100.00 |       18.00 |     118.00 |

#+BEGIN_SRC python :results output raw :exports results :var taxable=tab-items-06-11-2021[-1,5] amountdue=tab-items-06-11-2021[-1,7] gst=tab-items-06-11-2021[-1,6]
from num2words import num2words
CurrencySymbol = 'INR '
CurrencyWords = 'Rupees'
tableofvalues = " | /Taxable Value/ | *" + CurrencySymbol + str(taxable) + "* |\n | /Total amount due/ | *" + CurrencySymbol + str(amountdue) + "* |\n | | " + CurrencyWords + " *" + num2words(amountdue, lang='en_IN') + "* Only |"
print("#+ATTR_LATEX: :environment tabular :align la{8cm}")
print(tableofvalues)
print('# evaluate this and use =C-c C-v += or M-x org-babel-tangle-append or =,bA= ')
print('#+BEGIN_SRC beancount :exports none :tangle ~/org/Fava/fin-data/finance.org\n' )
print(',**** ACMEClient1 Invoice 2021-12-06')
print('2021-12-06 * "ACMEClient1 Invoice" #tax-2020-21')
print('  Income:ACMEClient1                   -' + str(taxable) + CurrencySymbol)
print('  Equity:Taxes:IncomeTax                           ' + str(round(taxable*0.1,2)) + CurrencySymbol)
print('  Equity:Taxes:CGST:Payable                          -' + str(round(gst/2,2)) + CurrencySymbol)
print('  Equity:Taxes:SGST:Payable                          -' + str(round(gst/2,2)) + CurrencySymbol)
print('  Expenses:Others                                    0.00 INR')
print('  Assets:Liquid:AcmeBank:Current')
print('  Assets:AccountsReceivable               -' + str(round(taxable-taxable*0.1+gst,2)) + CurrencySymbol)
print('  Equity:TempAccount                            ' + str(round(taxable-taxable*0.1+gst,2)) + CurrencySymbol)
print(' ')
print('2021-11-06 * "ACMEClient1 Invoice Generated" #tax-2020-21')
print('  Equity:Taxes:CGST:Payable                           ' + str(round(gst/2,2)) + CurrencySymbol)
print('  Equity:Taxes:SGST:Payable                           ' + str(round(gst/2,2)) + CurrencySymbol)
print('  Equity:Taxes:CGST:Paid                             -' + str(round(gst/2,2)) + CurrencySymbol)
print('  Equity:Taxes:SGST:Paid                             -' + str(round(gst/2,2)) + CurrencySymbol)
print('  Assets:AccountsReceivable                ' + str(round(taxable-taxable*0.1+gst,2)) + CurrencySymbol)
print('  Equity:TempAccount                           -' + str(round(taxable-taxable*0.1+gst,2)) + CurrencySymbol)
print('#+END_SRC')
#+END_SRC

#+RESULTS:
#+ATTR_LATEX: :environment tabular :align la{8cm}
 | /Taxable Value/ | *INR 100.0* |
 | /Total amount due/ | *INR 118.0* |
 | | Rupees *one hundred and eighteen* Only |
# evaluate this and use =C-c C-v += or M-x org-babel-tangle-append or =,bA= 
#+BEGIN_SRC beancount :exports none :tangle ~/org/Fava/fin-data/finance.org

,**** ACMEClient1 Invoice 2021-12-06
2021-12-06 * "ACMEClient1 Invoice" #tax-2020-21
  Income:ACMEClient1                   -100.0INR 
  Equity:Taxes:IncomeTax                           10.0INR 
  Equity:Taxes:CGST:Payable                          -9.0INR 
  Equity:Taxes:SGST:Payable                          -9.0INR 
  Expenses:Others                                    0.00 INR
  Assets:Liquid:AcmeBank:Current
  Assets:AccountsReceivable               -108.0INR 
  Equity:TempAccount                            108.0INR 
 
2021-11-06 * "ACMEClient1 Invoice Generated" #tax-2020-21
  Equity:Taxes:CGST:Payable                           9.0INR 
  Equity:Taxes:SGST:Payable                           9.0INR 
  Equity:Taxes:CGST:Paid                             -9.0INR 
  Equity:Taxes:SGST:Paid                             -9.0INR 
  Assets:AccountsReceivable                108.0INR 
  Equity:TempAccount                           -108.0INR 
#+END_SRC

#+INCLUDE: setup/bankinfo.org::#bank
#+INCLUDE: setup/bankinfo.org::#terms

*** TODO Fill cleartax with invoice                                                                        :noexport:
SCHEDULED:<2021-11-06 14:00>
https://gst.gov.in
| *Invoice No.*  | 06-11-2021-ACMEClient1 |
| *Invoice Date* | 06-11-2021 |

*** TODO Check if Invoice is paid                                                                          :noexport:
SCHEDULED: <2021-12-06 14:00>


* TODO Teaching 2021 ACMEClient1 MBA 1 DT                                                         :Billable:ACMEClient1:
:LOGBOOK:
CLOCK: [2021-10-06 Wed 16:27]--[2021-10-06 Wed 17:27] =>  1:00
:END:

* Some customizations for the =invoice= yasnippet
- =CurrencySymbol= and =CurrencyWords= according to your currency
- Date format (My default is =%d-%m-%Y=)
- Invoice numbering format (=Today's date-ClientName= is my default)

* org-babel-tangle-append code

#+BEGIN_SRC emacs-lisp
   ;; https://emacs.stackexchange.com/questions/28098/how-to-change-org-mode-babel-tangle-write-to-file-way-as-append-instead-of-overr
   (defun org-babel-tangle-append ()
     "Append source code block at point to its tangle file.
   The command works like `org-babel-tangle' with prefix arg
   but `delete-file' is ignored."
     (interactive)
     (cl-letf (((symbol-function 'delete-file) #'ignore))
       (org-babel-tangle '(4))))

   (defun org-babel-tangle-append-setup ()
     "Add key-binding C-c C-v C-t for `org-babel-tangle-append'."
     (spacemacs/set-leader-keys-for-major-mode 'org-mode
       "bA" 'org-babel-tangle-append)
     (org-defkey org-mode-map (kbd "C-c C-v +") 'org-babel-tangle-append))

   (add-hook 'org-mode-hook #'org-babel-tangle-append-setup)
 #+END_SRC
* Subtitles
Check the captions.vtt file in the repo.
